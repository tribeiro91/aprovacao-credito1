{
  "{\"sourceRoot\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\",\"filename\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\\\\src\\\\controllers\\\\ClientController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend",
      "filename": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\controllers\\ClientController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\controllers\\ClientController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\controllers\\ClientController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\controllers",
        "sourceFileName": "ClientController.js"
      }
    },
    "ast": null,
    "code": "const Client = require('../models/Client');\n\nconst ClientController = () => {\n  const list = async (req, res) => {\n    try {\n      const clientes = await Client.findAll();\n      return res.status(200).json(clientes);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Ocorreu um erro durante a consulta.'\n      });\n    }\n  };\n\n  const get = async (req, res) => {\n    // destruction ES6\n    const {\n      params\n    } = req;\n\n    try {\n      const cliente = await Client.findById(params.id);\n      return res.status(200).json(cliente);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Ocorreu um erro durante a consulta.'\n      });\n    }\n  };\n\n  const create = async (req, res) => {\n    const {\n      body\n    } = req;\n\n    try {\n      body.pontuacao = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\n\n      if (body.pontuacao >= 1 && body.pontuacao <= 299) {\n        body.credito = \"Reprovado\";\n      } else if (body.pontuacao >= 300 && body.pontuacao <= 599) {\n        body.credito = \"R$1000,00\";\n      } else if (body.pontuacao >= 600 && body.pontuacao <= 799) {\n        body.credito = \"50% da renda informada, valor mínimo R$1000,00\";\n      } else if (body.pontuacao >= 800 && body.pontuacao <= 950) {\n        body.credito = \"200% da renda informada\";\n      } else if (body.pontuacao >= 951 && body.pontuacao <= 999) {\n        body.credito = \"Sem limites, considerar R$ 1.000.000\";\n      }\n\n      console.log(body);\n      await Client.create(body);\n      res.status(201).json({\n        'message': body\n      });\n    } catch (err) {\n      console.log(err);\n      res.status(500).json({\n        message: err.message || \"Ocorreu um erro ao salvar a solicitação do cliente.\"\n      });\n    }\n  };\n\n  const update = async (req, res) => {\n    const {\n      body,\n      params\n    } = req;\n    const client = await Client.findById(params.id);\n\n    if (body.pontuacao >= 1 && body.pontuacao <= 299) {\n      body.credito = \"Reprovado\";\n    } else if (body.pontuacao >= 300 && body.pontuacao <= 599) {\n      body.credito = \"R$1000,00\";\n    } else if (body.pontuacao >= 600 && body.pontuacao <= 799) {\n      body.credito = \"50% da renda informada, valor mínimo R$1000,00\";\n    } else if (body.pontuacao >= 800 && body.pontuacao <= 950) {\n      body.credito = \"200% da renda informada\";\n    } else if (body.pontuacao >= 951 && body.pontuacao <= 999) {\n      body.credito = \"Sem limites, considerar R$ 1.000.000\";\n    }\n\n    if (!client) {\n      return res.status(404).json({\n        message: \"Solicitação de cliente não encontrada com a identificação \" + req.params.clienteId\n      });\n    }\n\n    if (body.pontuacao > 1000) {\n      return res.status(400).json({\n        message: \"Pontuacao no maximo 1000\"\n      });\n    }\n\n    const model = { ...client,\n      ...body\n    };\n\n    try {\n      await Client.update(model, {\n        where: {\n          id: params.id\n        }\n      });\n      res.status(200).json({\n        'message': 'Solicitação de crédito atualizada com sucesso'\n      });\n    } catch (err) {\n      return res.status(500).json({\n        message: \"Algo aconteceu ao atualizar a solitação do cliente \" + req.params.clienteId\n      });\n    }\n  };\n\n  const destroy = async (req, res) => {\n    const {\n      params\n    } = req;\n    const client = await Client.findById(params.id);\n\n    if (!client) {\n      return res.status(404).json({\n        message: \"Solicitação de cliente não encontrada com a identificação\"\n      });\n    }\n\n    try {\n      await client.destroy();\n      return res.status(200).json({\n        message: \"Solicitação excluída com sucesso\"\n      });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        message: \"Não foi possível excluir a solicitação \" + req.params.clienteId\n      });\n    }\n  };\n\n  return {\n    list,\n    get,\n    create,\n    update,\n    destroy\n  };\n};\n\nmodule.exports = ClientController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ClientController.js"
      ],
      "names": [
        "Client",
        "require",
        "ClientController",
        "list",
        "req",
        "res",
        "clientes",
        "findAll",
        "status",
        "json",
        "err",
        "console",
        "log",
        "msg",
        "get",
        "params",
        "cliente",
        "findById",
        "id",
        "create",
        "body",
        "pontuacao",
        "Math",
        "floor",
        "random",
        "credito",
        "message",
        "update",
        "client",
        "clienteId",
        "model",
        "where",
        "destroy",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\controllers",
      "sourcesContent": [
        "const Client = require('../models/Client');\r\n\r\nconst ClientController = () => {\r\n\r\n\r\n    const list = async (req, res) => {\r\n        try {\r\n          const clientes = await Client.findAll();\r\n          return res.status(200).json(clientes);          \r\n        } catch (err) {\r\n            \r\n          console.log(err);\r\n          return res.status(500).json({ msg: 'Ocorreu um erro durante a consulta.' });\r\n        }\r\n      }\r\n  \r\n      const get = async (req, res) => {\r\n        // destruction ES6\r\n        const { params } = req;\r\n        try {\r\n          const cliente = await Client.findById(params.id);\r\n          return res.status(200).json(cliente);\r\n        } catch (err) {\r\n          console.log(err);\r\n          return res.status(500).json({ msg: 'Ocorreu um erro durante a consulta.' });\r\n        }\r\n      }\r\n\r\n    const create  = async (req, res) => {\r\n        const {body} = req;\r\n\r\n        try{\r\n            body.pontuacao = Math.floor(Math.random() * (999 - 1 + 1)) + 1;\r\n\r\n            if(body.pontuacao >= 1 && body.pontuacao <= 299){\r\n                body.credito = \"Reprovado\";\r\n            }else if(body.pontuacao >= 300 && body.pontuacao <= 599){\r\n                body.credito = \"R$1000,00\";\r\n            }else if(body.pontuacao >= 600 && body.pontuacao <= 799){\r\n                body.credito = \"50% da renda informada, valor mínimo R$1000,00\";\r\n            }else if(body.pontuacao >= 800 && body.pontuacao <= 950){\r\n                body.credito = \"200% da renda informada\";\r\n            }else if(body.pontuacao >= 951 && body.pontuacao <= 999){\r\n                body.credito = \"Sem limites, considerar R$ 1.000.000\";\r\n            }   \r\n\r\n            console.log(body);\r\n            await Client.create(body);\r\n            res.status(201).json({'message':body});\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            res.status(500).json({\r\n                message: err.message || \"Ocorreu um erro ao salvar a solicitação do cliente.\"\r\n            });\r\n        }    \r\n    };\r\n\r\n    const update = async (req, res) => {\r\n        const { body, params } = req;\r\n        const client = await Client.findById(params.id);\r\n\r\n        if(body.pontuacao >= 1 && body.pontuacao <= 299){\r\n            body.credito = \"Reprovado\";\r\n        }else if(body.pontuacao >= 300 && body.pontuacao <= 599){\r\n            body.credito = \"R$1000,00\";\r\n        }else if(body.pontuacao >= 600 && body.pontuacao <= 799){\r\n            body.credito = \"50% da renda informada, valor mínimo R$1000,00\";\r\n        }else if(body.pontuacao >= 800 && body.pontuacao <= 950){\r\n            body.credito = \"200% da renda informada\";\r\n        }else if(body.pontuacao >= 951 && body.pontuacao <= 999){\r\n            body.credito = \"Sem limites, considerar R$ 1.000.000\";\r\n        }   \r\n\r\n\r\n        if(!client){\r\n            return res.status(404).json({\r\n                message: \"Solicitação de cliente não encontrada com a identificação \" + req.params.clienteId\r\n            });\r\n        }\r\n\r\n        if (body.pontuacao > 1000) {\r\n            return res.status(400).json({\r\n                message: \"Pontuacao no maximo 1000\"\r\n            });\r\n        }\r\n\r\n        const model = {\r\n            ...client,\r\n            ...body\r\n        };\r\n\r\n        try{\r\n            await Client.update(model, {\r\n                where: {\r\n                    id : params.id\r\n                }\r\n            });\r\n            res.status(200).json({'message': 'Solicitação de crédito atualizada com sucesso'});\r\n\r\n        }catch(err){\r\n            return res.status(500).json({\r\n                message: \"Algo aconteceu ao atualizar a solitação do cliente \" + req.params.clienteId\r\n            });\r\n        }\r\n    };\r\n\r\n    const destroy = async (req, res) => {\r\n        const { params } = req;\r\n\r\n        const client = await Client.findById(params.id);\r\n\r\n        if(!client){\r\n            return res.status(404).json({\r\n                message: \"Solicitação de cliente não encontrada com a identificação\"\r\n            });   \r\n        }\r\n\r\n        try{\r\n            await client.destroy();\r\n            return res.status(200).json({message : \"Solicitação excluída com sucesso\"});\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            return res.status(500).json({\r\n                message: \"Não foi possível excluir a solicitação \" + req.params.clienteId\r\n            });      \r\n        }\r\n        \r\n    }\r\n\r\n    return{\r\n        list,\r\n        get,\r\n        create,\r\n        update, \r\n        destroy\r\n    };\r\n\r\n};\r\n\r\n\r\nmodule.exports = ClientController;"
      ]
    },
    "sourceType": "module",
    "mtime": 1567552466408
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\",\"filename\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\\\\src\\\\models\\\\Client.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\tania\\\\Documents\\\\GitHub\\\\aprovacao-credito1\\\\backend\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend",
      "filename": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\models\\Client.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\models\\Client.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\models\\Client.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\models",
        "sourceFileName": "Client.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require(\"sequelize\");\n\nconst sequelize = require(\"../config/database\");\n\nconst CreditRequest = require(\"./CreditRequest\");\n\nconst hooks = {};\nconst tableName = \"clients\";\nconst Client = sequelize.define(\"Client\", {\n  id: {\n    type: Sequelize.INTEGER,\n    autoIncrement: true,\n    primaryKey: true,\n    unique: true\n  },\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  cpf: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  salary: {\n    type: Sequelize.DECIMAL,\n    allowNull: false\n  },\n  score: {\n    type: Sequelize.INTEGER,\n    allowNull: false\n  },\n  createdAt: {\n    type: Sequelize.DATE,\n    allowNull: false,\n    defaultValue: Sequelize.NOW\n  },\n  updatedAt: {\n    type: Sequelize.DATE,\n    allowNull: false,\n    defaultValue: Sequelize.NOW\n  }\n}, {\n  hooks,\n  tableName\n});\nClient.hasOne(CreditRequest);\n\nClient.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n  return values;\n};\n\nmodule.exports = Cliente;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudC5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiQ3JlZGl0UmVxdWVzdCIsImhvb2tzIiwidGFibGVOYW1lIiwiQ2xpZW50IiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidW5pcXVlIiwibmFtZSIsIlNUUklORyIsImFsbG93TnVsbCIsImNwZiIsInNhbGFyeSIsIkRFQ0lNQUwiLCJzY29yZSIsImNyZWF0ZWRBdCIsIkRBVEUiLCJkZWZhdWx0VmFsdWUiLCJOT1ciLCJ1cGRhdGVkQXQiLCJoYXNPbmUiLCJwcm90b3R5cGUiLCJ0b0pTT04iLCJ2YWx1ZXMiLCJPYmplY3QiLCJhc3NpZ24iLCJnZXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiQ2xpZW50ZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxvQkFBRCxDQUF6Qjs7QUFDQSxNQUFNRSxhQUFhLEdBQUdGLE9BQU8sQ0FBQyxpQkFBRCxDQUE3Qjs7QUFDQSxNQUFNRyxLQUFLLEdBQUcsRUFBZDtBQUVBLE1BQU1DLFNBQVMsR0FBRyxTQUFsQjtBQUVBLE1BQU1DLE1BQU0sR0FBR0osU0FBUyxDQUFDSyxNQUFWLENBQ1gsUUFEVyxFQUVYO0FBQ0lDLEVBQUFBLEVBQUUsRUFBRTtBQUNBQyxJQUFBQSxJQUFJLEVBQUdULFNBQVMsQ0FBQ1UsT0FEakI7QUFFQUMsSUFBQUEsYUFBYSxFQUFFLElBRmY7QUFHQUMsSUFBQUEsVUFBVSxFQUFFLElBSFo7QUFJQUMsSUFBQUEsTUFBTSxFQUFFO0FBSlIsR0FEUjtBQU9JQyxFQUFBQSxJQUFJLEVBQUc7QUFDSEwsSUFBQUEsSUFBSSxFQUFFVCxTQUFTLENBQUNlLE1BRGI7QUFFSEMsSUFBQUEsU0FBUyxFQUFFO0FBRlIsR0FQWDtBQVdJQyxFQUFBQSxHQUFHLEVBQUc7QUFDRlIsSUFBQUEsSUFBSSxFQUFFVCxTQUFTLENBQUNlLE1BRGQ7QUFFRkMsSUFBQUEsU0FBUyxFQUFFO0FBRlQsR0FYVjtBQWVJRSxFQUFBQSxNQUFNLEVBQUc7QUFDTFQsSUFBQUEsSUFBSSxFQUFFVCxTQUFTLENBQUNtQixPQURYO0FBRUxILElBQUFBLFNBQVMsRUFBRTtBQUZOLEdBZmI7QUFtQklJLEVBQUFBLEtBQUssRUFBRztBQUNIWCxJQUFBQSxJQUFJLEVBQUVULFNBQVMsQ0FBQ1UsT0FEYjtBQUVITSxJQUFBQSxTQUFTLEVBQUU7QUFGUixHQW5CWjtBQXVCSUssRUFBQUEsU0FBUyxFQUFFO0FBQ1BaLElBQUFBLElBQUksRUFBRVQsU0FBUyxDQUFDc0IsSUFEVDtBQUVQTixJQUFBQSxTQUFTLEVBQUUsS0FGSjtBQUdQTyxJQUFBQSxZQUFZLEVBQUV2QixTQUFTLENBQUN3QjtBQUhqQixHQXZCZjtBQTRCSUMsRUFBQUEsU0FBUyxFQUFHO0FBQ1JoQixJQUFBQSxJQUFJLEVBQUVULFNBQVMsQ0FBQ3NCLElBRFI7QUFFUk4sSUFBQUEsU0FBUyxFQUFFLEtBRkg7QUFHUk8sSUFBQUEsWUFBWSxFQUFHdkIsU0FBUyxDQUFDd0I7QUFIakI7QUE1QmhCLENBRlcsRUFvQ1g7QUFDSXBCLEVBQUFBLEtBREo7QUFFSUMsRUFBQUE7QUFGSixDQXBDVyxDQUFmO0FBMENBQyxNQUFNLENBQUNvQixNQUFQLENBQWN2QixhQUFkOztBQUVBRyxNQUFNLENBQUNxQixTQUFQLENBQWlCQyxNQUFqQixHQUEwQixZQUFVO0FBQ2hDLFFBQU1DLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLQyxHQUFMLEVBQWxCLENBQWY7QUFDQSxTQUFPSCxNQUFQO0FBQ0gsQ0FIRDs7QUFLQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxPQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRhbmlhXFxEb2N1bWVudHNcXEdpdEh1YlxcYXByb3ZhY2FvLWNyZWRpdG8xXFxiYWNrZW5kXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoXCJzZXF1ZWxpemVcIik7XHJcbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoXCIuLi9jb25maWcvZGF0YWJhc2VcIik7XHJcbmNvbnN0IENyZWRpdFJlcXVlc3QgPSByZXF1aXJlKFwiLi9DcmVkaXRSZXF1ZXN0XCIpXHJcbmNvbnN0IGhvb2tzID0ge307XHJcblxyXG5jb25zdCB0YWJsZU5hbWUgPSBcImNsaWVudHNcIjtcclxuXHJcbmNvbnN0IENsaWVudCA9IHNlcXVlbGl6ZS5kZWZpbmUoXHJcbiAgICBcIkNsaWVudFwiLFxyXG4gICAge1xyXG4gICAgICAgIGlkOiB7XHJcbiAgICAgICAgICAgIHR5cGUgOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcclxuICAgICAgICAgICAgcHJpbWFyeUtleTogdHJ1ZSxcclxuICAgICAgICAgICAgdW5pcXVlOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBuYW1lIDoge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxyXG4gICAgICAgICAgICBhbGxvd051bGw6IGZhbHNlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjcGYgOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXHJcbiAgICAgICAgICAgIGFsbG93TnVsbDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNhbGFyeSA6IHtcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLkRFQ0lNQUwsXHJcbiAgICAgICAgICAgIGFsbG93TnVsbDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNjb3JlIDoge1xyXG4gICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgICAgICBhbGxvd051bGw6IGZhbHNlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjcmVhdGVkQXQgOntcclxuICAgICAgICAgICAgdHlwZTogU2VxdWVsaXplLkRBVEUsXHJcbiAgICAgICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogU2VxdWVsaXplLk5PV1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdXBkYXRlZEF0IDoge1xyXG4gICAgICAgICAgICB0eXBlOiBTZXF1ZWxpemUuREFURSxcclxuICAgICAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcclxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlIDogU2VxdWVsaXplLk5PV1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgaG9va3MsXHJcbiAgICAgICAgdGFibGVOYW1lXHJcbiAgICB9XHJcbik7XHJcblxyXG5DbGllbnQuaGFzT25lKENyZWRpdFJlcXVlc3QpO1xyXG5cclxuQ2xpZW50LnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbigpe1xyXG4gICAgY29uc3QgdmFsdWVzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5nZXQoKSk7XHJcbiAgICByZXR1cm4gdmFsdWVzO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDbGllbnRlO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Client.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "CreditRequest",
        "hooks",
        "tableName",
        "Client",
        "define",
        "id",
        "type",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "unique",
        "name",
        "STRING",
        "allowNull",
        "cpf",
        "salary",
        "DECIMAL",
        "score",
        "createdAt",
        "DATE",
        "defaultValue",
        "NOW",
        "updatedAt",
        "hasOne",
        "prototype",
        "toJSON",
        "values",
        "Object",
        "assign",
        "get",
        "module",
        "exports",
        "Cliente"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAzB;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMG,KAAK,GAAG,EAAd;AAEA,MAAMC,SAAS,GAAG,SAAlB;AAEA,MAAMC,MAAM,GAAGJ,SAAS,CAACK,MAAV,CACX,QADW,EAEX;AACIC,EAAAA,EAAE,EAAE;AACAC,IAAAA,IAAI,EAAGT,SAAS,CAACU,OADjB;AAEAC,IAAAA,aAAa,EAAE,IAFf;AAGAC,IAAAA,UAAU,EAAE,IAHZ;AAIAC,IAAAA,MAAM,EAAE;AAJR,GADR;AAOIC,EAAAA,IAAI,EAAG;AACHL,IAAAA,IAAI,EAAET,SAAS,CAACe,MADb;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAPX;AAWIC,EAAAA,GAAG,EAAG;AACFR,IAAAA,IAAI,EAAET,SAAS,CAACe,MADd;AAEFC,IAAAA,SAAS,EAAE;AAFT,GAXV;AAeIE,EAAAA,MAAM,EAAG;AACLT,IAAAA,IAAI,EAAET,SAAS,CAACmB,OADX;AAELH,IAAAA,SAAS,EAAE;AAFN,GAfb;AAmBII,EAAAA,KAAK,EAAG;AACHX,IAAAA,IAAI,EAAET,SAAS,CAACU,OADb;AAEHM,IAAAA,SAAS,EAAE;AAFR,GAnBZ;AAuBIK,EAAAA,SAAS,EAAE;AACPZ,IAAAA,IAAI,EAAET,SAAS,CAACsB,IADT;AAEPN,IAAAA,SAAS,EAAE,KAFJ;AAGPO,IAAAA,YAAY,EAAEvB,SAAS,CAACwB;AAHjB,GAvBf;AA4BIC,EAAAA,SAAS,EAAG;AACRhB,IAAAA,IAAI,EAAET,SAAS,CAACsB,IADR;AAERN,IAAAA,SAAS,EAAE,KAFH;AAGRO,IAAAA,YAAY,EAAGvB,SAAS,CAACwB;AAHjB;AA5BhB,CAFW,EAoCX;AACIpB,EAAAA,KADJ;AAEIC,EAAAA;AAFJ,CApCW,CAAf;AA0CAC,MAAM,CAACoB,MAAP,CAAcvB,aAAd;;AAEAG,MAAM,CAACqB,SAAP,CAAiBC,MAAjB,GAA0B,YAAU;AAChC,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,GAAL,EAAlB,CAAf;AACA,SAAOH,MAAP;AACH,CAHD;;AAKAI,MAAM,CAACC,OAAP,GAAiBC,OAAjB",
      "sourceRoot": "C:\\Users\\tania\\Documents\\GitHub\\aprovacao-credito1\\backend\\src\\models",
      "sourcesContent": [
        "const Sequelize = require(\"sequelize\");\r\nconst sequelize = require(\"../config/database\");\r\nconst CreditRequest = require(\"./CreditRequest\")\r\nconst hooks = {};\r\n\r\nconst tableName = \"clients\";\r\n\r\nconst Client = sequelize.define(\r\n    \"Client\",\r\n    {\r\n        id: {\r\n            type : Sequelize.INTEGER,\r\n            autoIncrement: true,\r\n            primaryKey: true,\r\n            unique: true\r\n        },\r\n        name : {\r\n            type: Sequelize.STRING,\r\n            allowNull: false\r\n        },\r\n        cpf : {\r\n            type: Sequelize.STRING,\r\n            allowNull: false\r\n        },\r\n        salary : {\r\n            type: Sequelize.DECIMAL,\r\n            allowNull: false\r\n        },\r\n        score : {\r\n             type: Sequelize.INTEGER,\r\n             allowNull: false\r\n        },\r\n        createdAt :{\r\n            type: Sequelize.DATE,\r\n            allowNull: false,\r\n            defaultValue: Sequelize.NOW\r\n        },\r\n        updatedAt : {\r\n            type: Sequelize.DATE,\r\n            allowNull: false,\r\n            defaultValue : Sequelize.NOW\r\n        }\r\n    },\r\n    {\r\n        hooks,\r\n        tableName\r\n    }\r\n);\r\n\r\nClient.hasOne(CreditRequest);\r\n\r\nClient.prototype.toJSON = function(){\r\n    const values = Object.assign({}, this.get());\r\n    return values;\r\n};\r\n\r\nmodule.exports = Cliente;\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1567552297340
  }
}